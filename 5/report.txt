实验目的
  使用二分法和牛顿法求方程的根，理解收敛的概念．

试验结果
1.
  二分法结果如下
1 [0.000000,3.000000]
2 [0.000000,1.500000]
3 [0.000000,0.750000]
4 [0.000000,0.375000]
5 [0.187500,0.375000]
6 [0.281250,0.375000]
7 [0.328125,0.375000]
8 [0.328125,0.351562]
9 [0.339844,0.351562]
10 [0.339844,0.345703]
11 [0.342773,0.345703]
12 [0.344238,0.345703]
13 [0.344971,0.345703]
14 [0.345337,0.345703]
15 [0.345520,0.345703]
16 [0.345612,0.345703]
17 [0.345612,0.345657]
18 [0.345612,0.345634]
19 [0.345623,0.345634]
20 [0.345623,0.345629]
21 [0.345626,0.345629]
22 [0.345627,0.345629]
23 [0.345627,0.345628]
最终结果　x y : 
0.345628 0.000001
牛顿法结果如下
1 1.960784
2 1.233137
3 0.722749
4 0.423954
5 0.348262
6 0.345630
7 0.345627
可见牛顿法比起二分法收敛更快，两者都收敛到了正确的根．
最终结果　x y :
0.345627 0.000000

2.a
使用第一种方法结果如下
1 0.793701
2 0.964362
3 0.994025
4 0.999003
5 0.999834
6 0.999972
7 0.999995
8 0.999999
9 1.000000
10 1.000000
第二种方法结果
1 -1.000000
2 -3.000000
3 -55.000000
4 -332751.000000
5 -73686529681121504.000000
6 -800192186653981478358652672830638575390678549790720.000000
7 -1024738174056893932527762049050938485592367730189188160409266654928227462101562808957796957393014967922717761885876347463950283744054040677931592393424896.000000
8 -inf
9 -inf
10 -inf
可见第二种方法不能收敛
原因是第二种方法迭代函数在不懂点附近导数为5>1，不能收敛．而第一种方法在[0,1]区间上满足收敛条件．

2.b
初值为1.5
1 1.347826
2 1.325200
3 1.324718
经过三次迭代就收敛到正确的解．
而如果用初值0
1 -1.000000
2 -0.500000
3 -3.000000
4 -2.038462
5 -1.390282
6 -0.911612
7 -0.345028
8 -1.427751
9 -0.942418
10 -0.404949
11 -1.706905
12 -1.155756
13 -0.694192
14 0.742494
15 2.781296
16 1.982725
17 1.536927
18 1.357262
19 1.325663
20 1.324719
可见此时由于初值的选择，迭代经过了多次反复才收敛．
